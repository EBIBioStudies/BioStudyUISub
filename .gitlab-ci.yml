image: node:14.17.5
variables:
  DOCKER_TLS_CERTDIR: ''
stages:
  - setup
  - test
  - build
  - deploy

.build_template: &build_template
  stage: build
  before_script:
    - sh ./tasks/build_setup.sh
  script:
    - sh ./tasks/build.sh
  artifacts:
    paths:
      - subtool-$CI_ENVIRONMENT_SLUG.tar.gz
    expire_in: 2 days

.deploy_template: &deploy_definition
  stage: deploy
  before_script:
    - sh ./tasks/ssh_setup.sh
  script:
    - sh ./tasks/deploy.sh

install_dependencies:
  stage: setup
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
    expire_in: 2 days

test:
  stage: test
  dependencies:
    - install_dependencies
  variables:
    NODE_ENV: test
  script:
    - npm test

on-pull-requests:
  dependencies:
    - install_dependencies
  variables:
    NODE_ENV: test
  script:
    - npm test
  only:
    - external_pull_requests

# Build per environment
build:dev:
  <<: *build_template
  environment: DEV
  only:
    - dev

build:beta:
  <<: *build_template
  environment: BETA
  only:
    - beta

build:sandbox:
  <<: *build_template
  variables:
    GIT_CLONE_PATH: '$CI_BUILDS_DIR/$CI_JOB_ID/$CI_PROJECT_NAME'
  environment: SANDBOX
  tags:
    - sandbox_runner
  only:
    - master

build:prod:
  <<: *build_template
  environment: PROD
  only:
    - master

# Deploy per environment
deploy:dev:
  <<: *deploy_definition
  environment: DEV
  dependencies:
    - build:dev
  only:
    - dev

deploy:beta:
  <<: *deploy_definition
  environment: BETA
  dependencies:
    - build:beta
  only:
    - beta
  when: manual

deploy:prod:
  <<: *deploy_definition
  environment: PROD
  dependencies:
    - build:prod
  only:
    - master
  when: manual

deploy:sandbox:
  stage: deploy
  image: docker:latest
  variables:
    GIT_CLONE_PATH: '$CI_BUILDS_DIR/$CI_JOB_ID/$CI_PROJECT_NAME'
  services:
    - docker:dind
  environment: SANDBOX
  script:
    - sh ./tasks/build_image.sh
  tags:
    - sandbox_runner
  only:
    - master
  dependencies:
    - build:sandbox
  when: manual
